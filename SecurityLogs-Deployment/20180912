
###############
# 오류노트
###############
-logstash 재기동 목적으로 다시 deployment 후에는 pod log 확인하여 정상 기동로그 확인 할 것 -> 가끔 기동 오류 나오면, 이때는 재 배포 후 정상
-logstash filter 할 때 숫자와 문자("") 확인하여 제대로 표시할 것
-logstash filter는 문법은 참고하여 사용함
https://www.elastic.co/guide/en/logstash/current/event-dependent-configuration.html#conditionals
-윈도우2003에 로그온유형은 event_data.param4 필드이나 logstash filter에서 동작하지 않음



###############
# NOTE
###############
-윈도우2008 이상에서는 winlogbeat에서 이벤트로그 필터링하고
-윈도우2003 이하는 Event_id를 지원하지 않기에 winlogbeat가 전체 보안로그를 전송하고, logstash에서 이벤트로그 필터링 한다.
-윈도우2008은 로그온 이벤트 중 특정 LogonType 만 수집하는데, 윈도우2003은 ... 로그온(528) 일 떄 event_data.param4 필드가 LogonType임
-(참고)로그온이벤트의 하부 로그온타임은 문서 하단 참조



###############
# 서버들
###############
-kubernetes, private registry, docker build-server, nfs, haproxy
-elasticsearch 3node
-윈도우2008 이상 winlogbeat
-윈도우2003 이하 winlogbeat



#kubernetes가 사용할 logstash.conf 파일을 만든다

mkdir -p /vol/private/logstash-security-2008-deployment/app/logstash-6.4.0/config
mkdir -p /vol/private/logstash-security-2003-deployment/app/logstash-6.4.0/config


#윈도우2008용 logstash 설정
------------------------------------------------------------------------------------------------------------------------------------------
cat << EOF > /vol/private/logstash-security-2008-deployment/app/logstash-6.4.0/config/logstash.conf
input {
  beats {
    port => "5555"
  }
}

filter {
}

output {
  elasticsearch {
    hosts => ["10.10.64.91:9200", "10.10.64.92:9200", "10.10.64.93:9200"]
    index => "security-2008-%{+yyyy-MM-dd}"
  }
#  stdout { codec => rubydebug }
}
EOF
------------------------------------------------------------------------------------------------------------------------------------------

clear
ll /vol/private/logstash-security-2008-deployment/app/logstash-6.4.0/config/logstash.conf

cat /vol/private/logstash-security-2008-deployment/app/logstash-6.4.0/config/logstash.conf



#윈도우2003용 logstash 설정
-로그온(528) : 로컬컴퓨터에 계정로그인 시 발생, 네트웍로그온(540)에 제외
-로그오프(538) : 모든 유형의 로그오프 시 발생. 콘솔, 터미널, 대화형 등

------------------------------------------------------------------------------------------------------------------------------------------
cat << EOF > /vol/private/logstash-security-2003-deployment/app/logstash-6.4.0/config/logstash.conf
input {
  beats {
    port => "5555"
  }
}

filter {
  if [event_id] != 528 and [event_id] != 538 {
    drop {}
  }

}

output {
  elasticsearch {
    hosts => ["10.10.64.91:9200", "10.10.64.92:9200", "10.10.64.93:9200"]
    index => "security-2003-%{+yyyy-MM-dd}"
  }
#  stdout { codec => rubydebug }
}
EOF
------------------------------------------------------------------------------------------------------------------------------------------

clear
ll /vol/private/logstash-security-2003-deployment/app/logstash-6.4.0/config/logstash.conf

cat /vol/private/logstash-security-2003-deployment/app/logstash-6.4.0/config/logstash.conf


################################
# kubernetes/logstash(윈도우2008)
################################
rm -f /root/logstash-security-2008-deployment.yaml

vi /root/logstash-security-2008-deployment.yaml
----------------------------------------------------------------------------------------------------------------------------
#cat << EOF > /root/logstash-security-2008-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash-security-2008-deployment
  namespace: default
  labels:
    app: logstash-security-2008
    tier: frontend
    role: making
    deployment: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash-security-2008
      tier: frontend
      role: making
      deployment: v1
  template:
    metadata:
      labels:
        app: logstash-security-2008
        tier: frontend
        role: making
        deployment: v1
    spec:
      containers:
      - name: logstash-security-2008-deployment-pod
        image: reg.hmp.com/logstash-640-security-20180912-0756:latest
        ports:
        - containerPort: 5555
        resources:
          limits:
            memory: "2Gi"
          requests:
            memory: "1Gi"
        command: ["/app/logstash-6.4.0/bin/logstash", "-f", "/app/logstash-6.4.0/config/logstash.conf"]
        volumeMounts:
        - mountPath: /app/logstash-6.4.0/config/logstash.conf
          name: name1
      volumes:
      - name: name1
        hostPath:
          path: /vol/private/logstash-security-2008-deployment/app/logstash-6.4.0/config/logstash.conf
          type: File
----------------------------------------------------------------------------------------------------------------------------




################################
# kubernetes/logstash(윈도우2003)
################################
rm -f /root/logstash-security-2003-deployment.yaml

vi /root/logstash-security-2003-deployment.yaml
----------------------------------------------------------------------------------------------------------------------------
#cat << EOF > /root/logstash-security-2003-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash-security-2003-deployment
  namespace: default
  labels:
    app: logstash-security-2003
    tier: frontend
    role: making
    deployment: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash-security-2003
      tier: frontend
      role: making
      deployment: v1
  template:
    metadata:
      labels:
        app: logstash-security-2003
        tier: frontend
        role: making
        deployment: v1
    spec:
      containers:
      - name: logstash-security-2003-deployment-pod
        image: reg.hmp.com/logstash-640-security-20180912-0756:latest
        ports:
        - containerPort: 5555
        resources:
          limits:
            memory: "2Gi"
          requests:
            memory: "1Gi"
        command: ["/app/logstash-6.4.0/bin/logstash", "-f", "/app/logstash-6.4.0/config/logstash.conf"]
        volumeMounts:
        - mountPath: /app/logstash-6.4.0/config/logstash.conf
          name: name1
      volumes:
      - name: name1
        hostPath:
          path: /vol/private/logstash-security-2003-deployment/app/logstash-6.4.0/config/logstash.conf
          type: File
----------------------------------------------------------------------------------------------------------------------------


kubectl delete -f /root/logstash-security-2008-deployment.yaml
kubectl delete -f /root/logstash-security-2003-deployment.yaml


kubectl apply -f /root/logstash-security-2008-deployment.yaml
kubectl apply -f /root/logstash-security-2003-deployment.yaml

############################
# Kubernetes/Service
############################

#윈도우2008
--------------------------------------------------------------------------------------
cat << EOF > /root/logstash-security-2008-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: logstash-security-2008-service
  namespace: default
spec:
  type: NodePort
  selector:
    app: logstash-security-2008
    tier: frontend
    role: making
    deployment: v1
  ports:
  - name: http
    protocol: TCP
    port: 5555
    nodePort: 32001
EOF
--------------------------------------------------------------------------------------

#윈도우2003
--------------------------------------------------------------------------------------
cat << EOF > /root/logstash-security-2003-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: logstash-security-2003-service
  namespace: default
spec:
  type: NodePort
  selector:
    app: logstash-security-2003
    tier: frontend
    role: making
    deployment: v1
  ports:
  - name: http
    protocol: TCP
    port: 5555
    nodePort: 32002
EOF
--------------------------------------------------------------------------------------

kubectl delete -f /root/logstash-security-2008-service.yaml
kubectl delete -f /root/logstash-security-2003-service.yaml


kubectl apply -f /root/logstash-security-2008-service.yaml
kubectl apply -f /root/logstash-security-2003-service.yaml



############################
# HA-Proxy
############################
bk /etc/haproxy/haproxy.cfg

vi  /etc/haproxy/haproxy.cfg
-------------------------------------------------------------------------------------------------------------------------
##3 logstash-security-2008-service

frontend logstash-security-2008-service
  bind *:5555
  mode tcp
  option tcplog
  default_backend logstash-security-2008-service

backend logstash-security-2008-service
  mode tcp
  option tcplog
  option tcp-check
  balance roundrobin
  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
  server t1vkubework1 10.10.64.64:32001 check fall 3 rise 2
  server t1vkubework2 10.10.64.65:32001 check fall 3 rise 2
  server t1vkubework3 10.10.64.66:32001 check fall 3 rise 2


### logstash-security-2003-service

frontend logstash-security-2003-service
  bind *:5556
  mode tcp
  option tcplog
  default_backend logstash-security-2003-service

backend logstash-security-2003-service
  mode tcp
  option tcplog
  option tcp-check
  balance roundrobin
  default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
  server t1vkubework1 10.10.64.64:32002 check fall 3 rise 2
  server t1vkubework2 10.10.64.65:32002 check fall 3 rise 2
  server t1vkubework3 10.10.64.66:32002 check fall 3 rise 2
-------------------------------------------------------------------------------------------------------------------------

firewall-cmd --get-default-zone
firewall-cmd --permanent --zone=public --add-port=5555/tcp
firewall-cmd --permanent --zone=public --add-port=5556/tcp
firewall-cmd --reload
firewall-cmd --list-ports

systemctl stop haproxy
systemctl start haproxy
systemctl status haproxy


############################
# Kibana
############################

#인덱스생성
security-2008-*
security-2003-*






######################################
윈도우서버2008이상/winlogbeat 설정
######################################
#로그인이벤트만 가져오고, winlogbeat에서 로그온유형 2와 10만 허용하게끔 필터링함
#로그온(4624), 로그오프(4634)

winlogbeat.event_logs:
  - name: Security
    ignore_older: 1m  
    event_id: 4624, 4634

processors:
- drop_event:
    when.or:
      - equals.event_data.LogonType: '3'
      - equals.event_data.LogonType: '4'
      - equals.event_data.LogonType: '5'
      - equals.event_data.LogonType: '7'
      - equals.event_data.LogonType: '8'
      - equals.event_data.LogonType: '9'
      - equals.event_data.LogonType: '11'

output.logstash:
  hosts: ["10.10.64.99:5555"]

setup.kibana:
  host: "10.10.64.91:5601"

logging.to_files: true
logging.files:
  path: C:/ProgramData/winlogbeat/Logs
logging.level: error



######################################
윈도우서버2003이하/winlogbeat 설정
######################################

winlogbeat.event_logs:
  - name: Security
    ignore_older: 1m  

output.logstash:
  hosts: ["10.10.64.99:5555"]

logging.to_files: true
logging.files:
  path: C:/ProgramData/winlogbeat/Logs
logging.level: error


#####################################################################
# How to Secure Kibana using Nginx as a reverse proxy on CentOS 7
#####################################################################
https://www.hugeserver.com/kb/how-secure-kibana-nginx-centos/

yum install -y epel-release
yum install -y nginx

systemctl start nginx
systemctl enable nginx

yum install -y httpd-tools

htpasswd -c /etc/nginx/ hmplogadm

cat /etc/nginx/.htpasswd

vi /etc/nginx/nginx.conf
-----------------------------------------------------------------
server {
  listen *:80;
  server_name _;
  location / {
    proxy_pass http://10.10.64.91:5601;
    auth_basic "Restricted";
    auth_basic_user_file /etc/nginx/.htpasswd;
  }
}
-----------------------------------------------------------------

#Check if everything Ok with your configuration:
nginx -t

#You should get the following output:
# nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful


systemctl restart nginx




















#######################
# 참조
#######################

#로그온이벤트(4624)에 포함된 Logon Type으로 2와 10만 허용함
2 : Interactive
    (logon at keyboard and screen of system) Windows 2000 records Terminal Services logon as this type rather than Type 10.
3 : Network 
    (i.e. connection to shared folder on this computer from elsewhere on network or IIS logon - 
    Never logged by 528 on W2k and forward. See event 540)
    >>콘솔 또는 원격터미널 로그인
4 : Batch (i.e. scheduled task)
5 : Service (Service startup)
7 : Unlock (i.e. unnattended workstation with password protected screen saver)
8 : NetworkCleartext 
    (Logon with credentials sent in the clear text. Most often indicates a logon to IIS with "basic authentication")
    >>IIS 로그인
    
9 : NewCredentials
10 : RemoteInteractive (Terminal Services, Remote Desktop or Remote Assistance)
11 : CachedInteractive (logon with cached domain credentials such as when logging on to a laptop when away from the network)












