

키바나 HA, 코디네이팅/ingest 역활은 데이터노드가 수행토록한다.

1번호스트 : master
2번호스트 : data, ingest
3번호스트 : data, ingest
4번호스트 : data, ingest
5번호스트 : coordinating

#################################
OS BASIC
#################################

cd ~
cat << EOF >> .bashrc
export LS_COLORS="di=00;36:fi=00;37"
EOF




cd /sbin
vi bk
------------------------------------------------------------
#CP.ALL.ENABLE

for i in $*
do
        if [ -f $i ]
        then
                cp -pf "$1" "$1".`date +"%y%m%d.%H%M%S"`
        else
                echo "`basename $0` <filenames>"
        fi
done
------------------------------------------------------------


yum install -y net-tools


systemctl stop firewalld
systemctl disable firewalld





#################################
JAVA설치
#################################


Install Java
마스터서버 1대, 모드 3대 동시 진행


yum install -y wget
cd /opt/

wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz"

tar xzf jdk-8u131-linux-x64.tar.gz
cd /opt/jdk1.8.0_131/
alternatives --install /usr/bin/java java /opt/jdk1.8.0_131/bin/java 2



alternatives --config java


clear
java -version
export JAVA_HOME=/opt/jdk1.8.0_131
export JRE_HOME=/opt/jdk1.8.0_131/jre
export PATH=$PATH:/opt/jdk1.8.0_131/bin:/opt/jdk1.8.0_131/jre/bin



cat << EOF >> /root/.bash_profile
export JAVA_HOME=/opt/jdk1.8.0_131
export JRE_HOME=/opt/jdk1.8.0_131/jre
export PATH=$PATH:/opt/jdk1.8.0_131/bin:/opt/jdk1.8.0_131/jre/bin
EOF




#################################
Install elasticsearch 6.2.4
#################################

기본 프로그램 ($ES_HOME) : /usr/share/elasticsearch
실행 파일 : bin/elasticsearch
플러그인 : plugins
설정 : /etc/elasticsearch
./elasticsearch.yml
./jvm.options
./log4j2.properties
데이터 (path.data) : /var/lib/elasticsearch
로그 (path.logs) : /var/log/elasticsearch



마스터서버 1대, 노드 3대 모두 설치

cd ~
wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.2.4.rpm

sudo rpm --install elasticsearch-6.2.4.rpm

cat /etc/passwd
cat /etc/group

sudo systemctl daemon-reload
sudo systemctl enable elasticsearch.service

>elasticsearch 데몬 중지 상태 유지

#################################
Master
#################################

cat << EOF >> /etc/elasticsearch/elasticsearch.yml
cluster.name: hmp-big-data
node.name: ${HOSTNAME}
network.host: 0.0.0.0
http.cors.enabled: true
http.cors.allow-origin: "*"
http.cors.allow-headers: Authorization       #for head & XPACK
transport.tcp.port: 9300 
node.master: true
node.data: false
node.ingest: false
search.remote.connect: false
#bootstrap.memory_lock: true
discovery.zen.ping.unicast.hosts: ["10.10.64.91:9300", "10.10.64.92:9300",  "10.10.64.93:9300", "10.10.64.94:9300"]
#discovery.zen.mininum_master_nodes: 2
#action.auto_create_index: .security,.monitoring*,.watches,.triggered_watches,.watcher-history*,.ml*
EOF

cat /etc/elasticsearch/elasticsearch.yml


#################################
Data nodes
#################################

cat << EOF >> /etc/elasticsearch/elasticsearch.yml
cluster.name: hmp-big-data
node.name: ${HOSTNAME}
network.host: 0.0.0.0
http.cors.enabled: true
http.cors.allow-origin: "*"
http.cors.allow-headers: Authorization       #for head & XPACK
transport.tcp.port: 9300 
node.master: false
node.data: true
node.ingest: true
search.remote.connect: false
#bootstrap.memory_lock: true
discovery.zen.ping.unicast.hosts: ["10.10.64.91:9300", "10.10.64.92:9300",  "10.10.64.93:9300", "10.10.64.94:9300"]
#discovery.zen.mininum_master_nodes: 2
#action.auto_create_index: .security,.monitoring*,.watches,.triggered_watches,.watcher-history*,.ml*
EOF

cat /etc/elasticsearch/elasticsearch.yml

#action.auto_create_index 항목은 xpack 설치 후 쓰는 것이고 지금은 오류가 발생하니 주석처리해 둔다


#################################
Ingest / Cordinate node
#################################
#Ingest node 설정 : node.ingest: false
#coordinating node 설정 : master, data, ingest 모두 false 

cat << EOF >> /etc/elasticsearch/elasticsearch.yml
cluster.name: hmp-big-data
node.name: ${HOSTNAME}
network.host: 0.0.0.0
http.cors.enabled: true
http.cors.allow-origin: "*"
http.cors.allow-headers: Authorization       #for head & XPACK
transport.tcp.port: 9300 
node.master: false
node.data: false
node.ingest: false
search.remote.connect: false
#bootstrap.memory_lock: true
discovery.zen.ping.unicast.hosts: ["10.10.64.91:9300", "10.10.64.92:9300",  "10.10.64.93:9300", "10.10.64.94:9300"]
#discovery.zen.mininum_master_nodes: 2
#action.auto_create_index: .security,.monitoring*,.watches,.triggered_watches,.watcher-history*,.ml*
EOF

----------------------------








마스터/노드 모든 서버에 서비스를 기동하고 크롬 헤드에서 정상 확인
sudo systemctl start elasticsearch.service
sudo systemctl status elasticsearch.service


#크롬일레스틱헤드에서 설치 확인
#크롬검색> chrome elasticsearch head 검색 후 설치
http://10.10.64.91:9200

#################################
Install Elasticsearch X-Pack 
#################################

마스터/노드 등 모든 서버에서 elasticsearch 중지
systemctl stop elasticsearch
systemctl status elasticsearch


elasticsearch 설치된 디렉토리에서 x-pack 설치
/usr/share/elasticsearch/bin/elasticsearch-plugin install x-pack


x-pack 설치 후에는 security (기본 enable)를 disable 해준다
cat << EOF >> /etc/elasticsearch/elasticsearch.yml
xpack.security.enabled: false
EOF

cat /etc/elasticsearch/elasticsearch.yml



마스터/노드 등 모든 서버에서 elasticsearch 실행
systemctl start elasticsearch
systemctl status elasticsearch


#################################
Install KIBANA 6.x & X-PACK (마스터 서버 ONLY)
#################################


kibana는 마스터서버에 6.x 대의 최신 버전으로 설치 한다 (별도 서버 설치 권장)
불필요한 트랜잭션 유입을 차단하기 위해 모든 서버에 elasticsearch 서비스 중지

systemctl stop elasticsearch


마스터서버에만 설치 진행
rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch


cat << EOF > /etc/yum.repos.d/kibana.repo
[kibana-6.x]
name=Kibana repository for 6.x packages
baseurl=https://artifacts.elastic.co/packages/6.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF



sudo yum install -y kibana 

sudo /bin/systemctl daemon-reload
sudo /bin/systemctl enable kibana.service


kibana 설정 파일에 리슨방식(All Ip)과 마스터서버를 지정해준다 (파일 맨뒤에 추가)
cat << EOF >> /etc/kibana/kibana.yml
server.host: 0.0.0.0
elasticsearch.url: http://10.10.64.91:9200
EOF


kibana x-pack 설치, CPU속도에 따라 오래걸림 (약 10분 전/후로 소요됨)
cd /usr/share/kibana/bin
./kibana-plugin install x-pack

주의!!! elasticsearch의 x-pack에 security disable 했으므로 kibana도 아래 처럼 명시적으로 disable
옵션을 넣어주면 특별한 오류 없이 TCP 5601 포트로 리슨되지 않게 됨 (파일 맨뒤에 추가)
옵션 xpack.monitoring.enabled: true는 처음 실행 시 수 분 소요됨 (CPU High)

cat << EOF >> /etc/kibana/kibana.yml
xpack.security.enabled: false
xpack.monitoring.enabled: true
EOF

파일소유권변경
cd /usr/share/kibana
chown -R kibana:kibana optimize


모든서버에 elasticsearch  서비스 시작
systemctl start elasticsearch
systemctl status elasticsearch


마스터서버에 kibana 서비스 시작
systemctl start kibana
systemctl status kibana

로그확인
journalctl -u kibana.service


마스터서버 kibana접속(처음 실행 시 TCP 5601 리슨에 수분 소요) 
http://masterip:5601



#################################
X-PACK BASIC License 적용 (마스터서버 only)
#################################
이전 버전 참조


#################################
마스터서버에 LOG STASH 설치(데몬)
################################
6.x 최신 버전 설치

rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch


cat << EOF > /etc/yum.repos.d/logstash.repo 
[logstash-6.x]
name=Elastic repository for 6.x packages
baseurl=https://artifacts.elastic.co/packages/6.x/yum
gpgcheck=1
gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearch
enabled=1
autorefresh=1
type=rpm-md
EOF


sudo yum install -y logstash

cat << EOF > /usr/share/logstash/bin/logstash.conf
input { stdin { } }
output {
  elasticsearch { hosts => ["localhost:9200"] }
  stdout { codec => rubydebug }
}
EOF


#/etc/logstash는 logstash.yml  파일위치
cd /usr/share/logstash/bin
./logstash --path.settings=/etc/logstash -f logstash.conf


--> 엘라스틱 서치 서비스가 실행되어 있어야 함
--> logstash 데몬이 실행되고(수초 소요) 표준입력이 표준출력으로 나오는지 확인 후 CTRL+C로 종료





#################################
패러미터 조정 
#################################

#java heap
전체 메모리의 50%는 java heap, 나머지 50%는 루씬 파일 캐시에 사용
java heap 크기 조정

vi /etc/elasticsearch/jvm.options
-Xms1g
-Xmx1g


#swap off
swapoff -a

#파일
cat << EOF >> /etc/security/limits.conf
elasticsearch soft memlock unlimited
elasticsearch hard memlock unlimited
EOF


#################################
백업 / 리셋&복구
#################################


#데이터노드백업

systemctl stop kibana
systemctl stop elasticsearch

cd ~
tar cvfzp elastic_data_initial.tar.gz /var/lib/elasticsearch/nodes/

systemctl start elasticsearch
systemctl start kibana



#데이터노드 리셋&복구

#모든 노드 서비스 중지
systemctl stop kibana
systemctl stop elasticsearch



rm -rf /var/lib/elasticsearch/nodes
mkdir -p /var/lib/elasticsearch/nodes
chown elasticsearch:elasticsearch /var/lib/elasticsearch/nodes

cd /
tar xvfzp /root/elastic_data_initial.tar.gz 

systemctl start elasticsearch
systemctl start kibana






