
#############################################
Filebeat모듈설정
#############################################

#filebeat 설정은 기본설정과 모듈설정 2군데가 있고 각각 동시에 처리함
#멀티라인은 prospectors로만 테스트함. prospector는 곧 없어질 것이나 이것을 제외한 방식은 추후 확인해야 할 듯.

################# 
2-1. 기본설정
#################

vi /etc/filebeat/filebeat.yml
------------------------------------------------------
filebeat:
  prospectors:
  - input_type: log
    fields_under_root: true
    fields:
      type: mywaslog
    encoding: utf-8
    ignore_older: 24h
    scan_frequency: 5s
    clean_inactive: 48h  
    clean_removed: true
    paths:
      - /logs/waslog/sds_api_T1CSDSAPIDEV01.log
    multiline.pattern: '^[[0-9]{4}-[0-9]{2}-[0-9]{2}'
    multiline.negate: true
    multiline.match: after
    multiline.timeout: 5s
    
filebeat.config.modules:
  path: ${path.config}/modules.d/*.yml
  reload.enabled: false

setup.template.settings:
  index.number_of_shards: 3

setup.kibana:

output.logstash:
  hosts:
  - 10.10.62.103:5555
------------------------------------------------------



#################
2-2. 모듈설정
#################


#filebeat에는 여러 모듈이 있음
cd /etc/filebeat/modules.d
filebeat modules list

#이 중에서 apache2 모듈을 활성화 시킴
filebeat modules enable apache2
filebeat modules list

#비활성화
filebeat modules disable apache2

#모듈설정에 로그경로를 넣어줌 (access와 error는 logstash에서 if문으로 식별하여 처리하게됨)
vi /etc/filebeat/modules.d/apache2.yml
-------------------------------------------------------------------------
- module: apache2
  access:
    enabled: true
    var.paths: ["/logs/weblog/dev.reach.access.*.log"]

  error:
    enabled: true
    var.paths: ["/logs/weblog/error.*.log"]
-------------------------------------------------------------------------

#이렇게 2군데에 작성한 filebeat 설정의 적용(동작)은 logstash 셋팅 이후에 함



#############################################
Logstash설정
#############################################

#logstash는 filebeat의 기본설정을 받는 주는 것(현재는 싱글로그임)과
#filebeat모듈이 보내주는 것을 구분해서 처리해줘야 함

cd /etc/logstash/conf.d
bk logstash-pipeline-5555.conf

vi /etc/logstash/conf.d/logstash-pipeline-5555.conf
-----------------------------------------------------------
input { 
  beats { 
    port => "5555" 
  } 
} 


filter {
  if [type] == "mywaslog" {
    mutate {
      remove_field => [ "beat", "offset", "source" ]
    }
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:apptimestamp} .*" }
    }
    date {
      match => ["apptimestamp", "yyyy:MM:DD HH:mm:ss"]
    }
  }

  if [fileset][module] == "apache2" {
    if [fileset][name] == "access" {
      grok {
        match => { "message" => ["%{IPORHOST:[apache2][access][remote_ip]} - %{DATA:[apache2][access][user_name]} \[%{HTTPDATE:[apache2][access][time]}\] \"%{WORD:[apache2][access][method]} %{DATA:[apache2][access][url]} HTTP/%{NUMBER:[apache2][access][http_version]}\" %{NUMBER:[apache2][access][response_code]} %{NUMBER:[apache2][access][body_sent][bytes]}( \"%{DATA:[apache2][access][referrer]}\")?( \"%{DATA:[apache2][access][agent]}\")?",
          "%{IPORHOST:[apache2][access][remote_ip]} - %{DATA:[apache2][access][user_name]} \\[%{HTTPDATE:[apache2][access][time]}\\] \"-\" %{NUMBER:[apache2][access][response_code]} -" ] }
        remove_field => "message"
      }
      mutate {
        add_field => { "read_timestamp" => "%{@timestamp}" }
      }
      date {
        match => [ "[apache2][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
        remove_field => "[apache2][access][time]"
      }
      useragent {
        source => "[apache2][access][agent]"
        target => "[apache2][access][user_agent]"
        remove_field => "[apache2][access][agent]"
      }
      geoip {
        source => "[apache2][access][remote_ip]"
        target => "[apache2][access][geoip]"
      }
    }
    else if [fileset][name] == "error" {
      grok {
        match => { "message" => ["\[%{APACHE_TIME:[apache2][error][timestamp]}\] \[%{LOGLEVEL:[apache2][error][level]}\]( \[client %{IPORHOST:[apache2][error][client]}\])? %{GREEDYDATA:[apache2][error][message]}",
          "\[%{APACHE_TIME:[apache2][error][timestamp]}\] \[%{DATA:[apache2][error][module]}:%{LOGLEVEL:[apache2][error][level]}\] \[pid %{NUMBER:[apache2][error][pid]}(:tid %{NUMBER:[apache2][error][tid]})?\]( \[client %{IPORHOST:[apache2][error][client]}\])? %{GREEDYDATA:[apache2][error][message1]}" ] }
        pattern_definitions => {
          "APACHE_TIME" => "%{DAY} %{MONTH} %{MONTHDAY} %{TIME} %{YEAR}"
        }
        remove_field => "message"
      }
      mutate {
        rename => { "[apache2][error][message1]" => "[apache2][error][message]" }
      }
      date {
        match => [ "[apache2][error][timestamp]", "EEE MMM dd H:m:s YYYY", "EEE MMM dd H:m:s.SSSSSS YYYY" ]
        remove_field => "[apache2][error][timestamp]"
      }
    }
  }
  

  
  
##### filter end #####
}


output {
  if [type] == "mywaslog" {
    elasticsearch { hosts => "http://10.10.62.103:9200"
    index => "filebeat-test-mywaslog" }
  }

  if [fileset][module] == "apache2" {
    if [fileset][name] == "access" {  
      elasticsearch { hosts => "http://10.10.62.103:9200"
      index => "filebeat-test-myaccesslog" }    
    }
    else if [fileset][name] == "error" {  
      elasticsearch { hosts => "http://10.10.62.103:9200"
      index => "filebeat-test-myerrorlog" }    
    }
  }


}
-----------------------------------------------------------


















