
#################
# 이슈노트
#################
웹로그 월변경 될 떄 9시간 이전의 데이터를 가지고 kibana에서 discover되지 않음 9시 경과 후에는 실시간 로그 보여짐
-> 기존 @timestamp를 UTC(GMT +9)로 전환해서 그런듯하며 자세한 것은 추후 조치




#먼저 각 서버의 filebeat 3개 설정을 한 후 logstash TCP 5555 쪽에서 한번에 처리하게 설정한다
#앞서 개발서버 셋팅을 조금 수정(식별자 등)

#운영서버 : prd-api, prd-https, prd-http
#개발서버 : dev-api, dev-https, dev-http

########################################
# Filebeat(prd1/2 공통)
########################################
#운영서버 2대 모두 경로는 동일하고, 로그파일이름의 차이점은 호스트이름인데 이 것은 *으로 처리한다

cd /etc/filebeat
vi /etc/filebeat/filebeat.yml
========================================================================================================
filebeat.inputs:
#--------------------------------------------------------------------------
  - type: log
    fields_under_root: true
    fields:
      type: prd-api
    encoding: utf-8
    ignore_older: 72h
    scan_frequency: 10s
    clean_inactive: 240h
    clean_removed: true
    paths:
      - /logs/waslog/reach/reach1/sds_api_*.log
    multiline.pattern: '^[[0-9]{4}-[0-9]{2}-[0-9]{2}'
    multiline.negate: true
    multiline.match: after
    multiline.timeout: 5s
#--------------------------------------------------------------------------
  - type: log
    fields_under_root: true
    fields:
      type: prd-https
    encoding: utf-8
    ignore_older: 72h
    scan_frequency: 10s
    clean_inactive: 240h
    clean_removed: true
    paths:
      - /logs/weblog/reach/ssl_reach.access.*.log
#--------------------------------------------------------------------------
  - type: log
    fields_under_root: true
    fields:
      type: prd-http
    encoding: utf-8
    ignore_older: 72h
    scan_frequency: 10s
    clean_inactive: 240h
    clean_removed: true
    paths:
      - /logs/weblog/reach/reach.access.*.log
#--------------------------------------------------------------------------


### Modules & Kibana
filebeat.config.modules:
  path: ${path.config}/modules.d/*.yml
  reload.enabled: false

setup.template.settings:
  index.number_of_shards: 3
  
setup.kibana:

### OUTPUT SECTION
output.logstash:
  hosts:
  - 10.10.62.103:5555
========================================================================================================



########################################
# Filebeat(dev)
########################################

cd /etc/filebeat
vi /etc/filebeat/filebeat.yml
========================================================================================================
filebeat.inputs:
#--------------------------------------------------------------------------
  - type: log
    fields_under_root: true
    fields:
      type: dev-api
    encoding: utf-8
    ignore_older: 72h
    scan_frequency: 10s
    clean_inactive: 240h
    clean_removed: true
    paths:
      - /logs/waslog/sds_api_*.log
    multiline.pattern: '^[[0-9]{4}-[0-9]{2}-[0-9]{2}'
    multiline.negate: true
    multiline.match: after
    multiline.timeout: 5s
#--------------------------------------------------------------------------
  - type: log
    fields_under_root: true
    fields:
      type: dev-https
    encoding: utf-8
    ignore_older: 72h
    scan_frequency: 10s
    clean_inactive: 240h
    clean_removed: true
    paths:
      - /logs/weblog/ssl_dev.reach.access.*.log
#--------------------------------------------------------------------------
  - type: log
    fields_under_root: true
    fields:
      type: dev-http
    encoding: utf-8
    ignore_older: 72h
    scan_frequency: 10s
    clean_inactive: 240h
    clean_removed: true
    paths:
      - /logs/weblog/dev.reach.access.*.log
#--------------------------------------------------------------------------


### Modules & Kibana
filebeat.config.modules:
  path: ${path.config}/modules.d/*.yml
  reload.enabled: false

setup.template.settings:
  index.number_of_shards: 3
  
setup.kibana:

### OUTPUT SECTION
output.logstash:
  hosts:
  - 10.10.62.103:5555
========================================================================================================



########################################
# LogStash(ES 2번 서버)
########################################
#기존 개발서버 셋팅에 운영서버 셋팅을 더한다
#개발에서 필터링 테스트 등이 있을 수 있으니 if 문으로 운영/개발 따로 처리한다

#운영서버 : prd-api, prd-https, prd-http
#개발서버 : dev-api, dev-https, dev-http


cd /etc/logstash/conf.d
vi /etc/logstash/conf.d/logstash-pipeline-5555.conf
============================================================================================================
input { 
  beats { 
    port => "5555" 
  } 
} 

### FILTER SECTION

filter {

#--------------------------------------------------------------------------
  if [type] == "prd-api" {
    grok {
      match => { "message" => "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time} .*" }
      add_field => [ "received_at", "%{@timestamp}" ]
    }
    mutate {
      add_field => {
      "timestamp" => "%{year}-%{month}-%{day} %{time}"
      }
    }
    date {
      match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss" ]
    }
    mutate {
      remove_field => [ "beat", "offset", "source", "timestamp", "year", "month", "day", "time" ]
      }
    }
#--------------------------------------------------------------------------    
  else if [type] == "dev-api" {
    grok {
      match => { "message" => "%{YEAR:year}-%{MONTHNUM:month}-%{MONTHDAY:day} %{TIME:time} .*" }
      add_field => [ "received_at", "%{@timestamp}" ]
    }
    mutate {
      add_field => {
      "timestamp" => "%{year}-%{month}-%{day} %{time}"
      }
    }
    date {
      match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss" ]
    }
    mutate {
      remove_field => [ "beat", "offset", "source", "timestamp", "year", "month", "day", "time" ]
      }
    }
#--------------------------------------------------------------------------
  else if [type] == "prd-https" {
    grok {
      match => { "message" => "%{COMMONAPACHELOG}" }
    }

    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss +0900" ]
      timezone => "UTC"
    }

    geoip {
      source => "clientip"
    }
  }
#--------------------------------------------------------------------------
  else if [type] == "dev-https" {
    grok {
      match => { "message" => "%{COMMONAPACHELOG}" }
    }

    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss +0900" ]
      timezone => "UTC"
    }

    geoip {
      source => "clientip"
    }
  }
#--------------------------------------------------------------------------
  else if [type] == "prd-http" {
    grok {
      match => { "message" => "%{COMMONAPACHELOG}" }
    }

    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss +0900" ]
      timezone => "UTC"
    }

    geoip {
      source => "clientip"
    }
  }
#--------------------------------------------------------------------------
  else if [type] == "dev-http" {
    grok {
      match => { "message" => "%{COMMONAPACHELOG}" }
    }

    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss +0900" ]
      timezone => "UTC"
    }

    geoip {
      source => "clientip"
    }
  }  
#--------------------------------------------------------------------------
}  #End of Filter


### OUTPUT SECTION


output {
#--------------------------------------------------------------------------
  if [type] == "prd-api" 
  {
    elasticsearch { 
      hosts => "http://10.10.62.103:9200"
      action => "index"
      index => "logstash-prd-api-%{+YYYY.MM.dd}" 
    }
  }
#--------------------------------------------------------------------------
  else if [type] == "dev-api" 
  {
    elasticsearch { 
      hosts => "http://10.10.62.103:9200"
      action => "index"
      index => "logstash-dev-api-%{+YYYY.MM.dd}" 
    }
  }  
#--------------------------------------------------------------------------
  else if [type] == "prd-https"
  {
    elasticsearch { 
      hosts => "http://10.10.62.103:9200"
      action => "index"
      index => "logstash-prd-https-%{+YYYY.MM.dd}" 
    }
  }
#--------------------------------------------------------------------------
  else if [type] == "dev-https"
  {
    elasticsearch { 
      hosts => "http://10.10.62.103:9200"
      action => "index"
      index => "logstash-dev-https-%{+YYYY.MM.dd}" 
    }
  }
#--------------------------------------------------------------------------
  else if [type] == "prd-http"
  {
    elasticsearch { 
      hosts => "http://10.10.62.103:9200"
      action => "index"
      index => "logstash-prd-http-%{+YYYY.MM.dd}" 
    }
  }
#--------------------------------------------------------------------------
  else if [type] == "dev-http"
  {
    elasticsearch { 
      hosts => "http://10.10.62.103:9200"
      action => "index"
      index => "logstash-dev-http-%{+YYYY.MM.dd}" 
    }
  }  
#--------------------------------------------------------------------------

}
============================================================================================================


######################
#인덱스 삭제 스케쥴(1번서버)
######################

1.crontab 등록 (root)

crontab -e
============================================================================================
###ElasticSearch Log Purge
55 23 * * * /root/mycront/delete-es-index.sh
============================================================================================

2. 데이터삭제 스크립트

vi /root/mycron/delete-es-index.sh
==============================================================================================================================
#!/bin/sh

#개발서버 삭제 날짜 정의(기본 4주)
DeleteDevApi=$(date -d '4 week ago' +"%Y.%m.%d")
DeleteDevHttps=$(date -d '4 week ago' +"%Y.%m.%d")
DeleteDevHttp=$(date -d '4 week ago' +"%Y.%m.%d")

#운영서버 삭제 날짜 정의(기본 4주)
DeletePrdApi=$(date -d '4 week ago' +"%Y.%m.%d")
DeletePrdHttps=$(date -d '4 week ago' +"%Y.%m.%d")
DeletePrdHttp=$(date -d '4 week ago' +"%Y.%m.%d")

#개발서버 오래된 로그(인덱스) 삭제
curl -XDELETE http://localhost:9200/logstash-dev-api-$DeleteDevApi
curl -XDELETE http://localhost:9200/logstash-dev-https-$DeleteDevHttps
curl -XDELETE http://localhost:9200/logstash-dev-http-$DeleteDevHttp

#운영서버 오래된 로그(인덱스) 삭제 
curl -XDELETE http://localhost:9200/logstash-prd-api-$DeletePrdApi
curl -XDELETE http://localhost:9200/logstash-prd-https-$DeletePrdHttps
curl -XDELETE http://localhost:9200/logstash-prd-http-$DeletePrdHttp

#logstash history 삭제
curl -XDELETE http://localhost:9200/logstash-20*

#쉘실행 날짜 기록
echo RUN at `date` >> /root/mycron/delete-es-index.log
==============================================================================================================================


######################
#기타. 초기화 재로딩
######################

1. filebeat 중지
service filebeat stop
cat  /var/lib/filebeat/registry


2. logstash 중지
systemctl stop logstash

3. 오브젝트 삭제
curl -XDELETE http://localhost:9200/logstash-*
curl -XDELETE http://localhost:9200/.mon*

4.kibana index 삭제

5.logstash 실행
systemctl start logstash
systemctl status logstash
tail -f /var/log/logstash/logstash-plain.log


6.filebeat 로그 전송 초기화 및 실행
echo "[]" > /var/lib/filebeat/registry
cat  /var/lib/filebeat/registry

service filebeat start
service filebeat status
tail -f /var/log/filebeat/filebeat


