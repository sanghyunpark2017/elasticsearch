
#윈도우로그온 관련해서는 홈페이지에서 가이드하고 있음
https://www.elastic.co/blog/monitoring-windows-logons-with-winlogbeat


첫째, 로그온이벤트(4624) 처리
로그온유형(콘솔,IIS,원격터미널 등)이 무엇이든 간에 성공적으로 로그온했을 떄 발생함
특정 로그온유형(콘솔만)만 필터링 하려고 한다면 필터링(drop만 됨)을 걸어야 함

둘째, 로그오프이벤트(4625) 처리
위와 동일

셋째, 원격로그인 IP주소 비쥬얼화 (logstash필요)
1) winlogbeat의 output을 logstash로 해준다.
2) )logstash는 이벤트데이터 중에서 IpAddress 항목을 빼내서 geoip라는 이름의 필드로 넣어주고 elasticsearch로 전송한다.

input {
  beats {
    port => 5044
  }
}

filter {
  geoip {
    source => "[event_data][IpAddress]"
  }
}

output {
  elasticsearch {
    hosts => "logstash.elastic.local:9200"
    manage_template => false
    index => "%{[@metadata][beat]}-%{+YYYY.MM.dd}"
    document_type => "%{[@metadata][type]}"
  }
}

3) elasticsearch는 템플릿에서 geoip라는 필드를 geo type으로 선언해준다.

PUT _template/winlogbeat_1
{
  "order": 1,
  "template": "winlogbeat-*",
  "mappings": {
    "_default_": {
      "properties": {
        "geoip"  : {
          "dynamic": true,
          "properties" : {
            "ip": { "type": "ip" },
            "location" : { "type" : "geo_point" },
            "latitude" : { "type" : "float" },
            "longitude" : { "type" : "float" }
          }
        }
      }
    }
  }
}

이하 자세한 것은 홈페이지 참조
https://www.elastic.co/blog/monitoring-windows-logons-with-winlogbeat







------------------------- OLD -----------------------------


#winlogbeat는 정의된 이벤트ID로만 전송한다.
-단순한 조건으로만 동작하게 하여 리소스 사용량 최소화
-winlogbeat processor 사용하여 필터링 행위를 하게 하면 CPU, MEM 사용량 부담될 것으로 추정함

#logstash가 중간에서 필터링 할 것 해준다
-로그인이벤트 4624 중에서도 특정 logon type만 처리함

만약, winlogbeat에서 대량의 로그를 보내게되고, logstash에서 대부분을 drop하게 되는 조건이라면
winlogbeat에서 필터링하는 것도 고려한다

요점은 필터링을 어디에서 할 거냐

첫째, winlogbeat -- logstash(필터링) -- elsaticsearch

둘째, winlogbeat(필터링) -- elasticsearch 또는
     winlogbeat(필터링) -- logstash -- elasticsaerch



------------------------------------------------------------------------------------------------

#winlogbeat 

processors:
- drop_event:
    when.or:
      # This filters logons from managed service accounts.
      # The trailing dollar sign is reserved for managed service accounts.
      - regexp.event_data.TargetUserName: '.*\$'

      # This filters logon type 0 which is used for system accounts.
      - equals.event_data.LogonType: '0'

      # This filters logon type 5 which is used for service accounts.
      - equals.event_data.LogonType: '5'

      # This filters anonymous logons which are typically benign.
      # Anonymous users have extremely limited privileges.
      - equals.event_data.TargetUserName: 'ANONYMOUS LOGON'
      








#윈도우서버
-콘솔 로그인
-터미널 로그인

#리눅스/유닉스
-ssh 로그인







